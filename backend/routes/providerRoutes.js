const express = require('express');
const router = express.Router();
const db = require('../db');
const bcrypt = require('bcrypt');
const jwt = require('jsonwebtoken');

const JWT_SECRET = process.env.JWT_SECRET;

// –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞
router.post('/register', async (req, res) => {
  const {
    type, name, location, contactPerson,
    email, phone, languages, password, description, images
  } = req.body;

  console.log('–ü–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ—Ç —Ñ–æ—Ä–º—ã:', req.body); // üëà –î–æ–±–∞–≤–ª–µ–Ω–æ

  if (!type || !name || !location || !contactPerson || !email || !phone || !password) {
    return res.status(400).json({ error: '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è' });
  }

  try {
    const existingProvider = await db.query('SELECT * FROM providers WHERE email = $1', [email]);
    if (existingProvider.rows.length > 0) {
      return res.status(400).json({ error: '–ü–æ—Å—Ç–∞–≤—â–∏–∫ —Å —Ç–∞–∫–∏–º email —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç' });
    }

    const hashedPassword = await bcrypt.hash(password, 10);

    await db.query(
      'INSERT INTO providers (type, name, location, contact_person, email, phone, languages, password, description, images) VALUES ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10)',
      [
        type,
        name,
        location,
        contactPerson,
        email,
        phone,
        JSON.stringify(languages),
        hashedPassword,
        description,
        JSON.stringify(images)
      ]
    );

    res.status(201).json({ message: '–ü–æ—Å—Ç–∞–≤—â–∏–∫ —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω' });
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞:', error);
    res.status(500).json({ error: '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞' });
  }
});

module.exports = router;
